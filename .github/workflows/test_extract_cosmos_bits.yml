# This is a basic workflow to help you get started with Actions

name: Test Get Cosmos Account Endpoint+Key

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  extraction:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: JSON to variables
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: './back-end/arm-templates/azuredeploy.parameters.json'
          prefix: fromjson
          
      - name: Show output
        run: |
          echo "The resource group is ${{ env.fromjson_parameters_resource_group_value }}"
          echo "The region is ${{ env.fromjson_parameters_cosmos_db_account_name_value }}"
      
      # Logs into Azure with GitHub secret
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SUB_CREDENTIALS }}
 
      - name: Get Azure version
        id: test1
        run: |
          h=$(az --version)
          echo "::set-output name=h::$h"
 
      - name: Output Azure version
        run: |
          echo "${{ steps.test1.outputs.h }}"
          
      - name: create string
        run: |
          MY_STRING=$(cat << EOF
          first line
          second line
          third line
          EOF
          )
          MY_STRING="${MY_STRING//'%'/'%25'}"
          MY_STRING="${MY_STRING//$'\n'/'%0A'}"
          MY_STRING="${MY_STRING//$'\r'/'%0D'}"
          echo "::set-output name=content::$MY_STRING"
        id: my_string
        
      - name: display string
        run: |
          echo "The string is: ${{ steps.my_string.outputs.content }}"
             
      - name: Get Connection String
        id: connectionstr
        run: |
          CONNSTRJSON=$(az cosmosdb keys list --name sql-cosmos-db-account --resource-group CloudResumeChallenge --type connection-strings)
          
          CONNSTRJSON="${CONNSTRJSON//'%'/'%25'}"
          CONNSTRJSON="${CONNSTRJSON//$'\n'/''}"
          CONNSTRJSON="${CONNSTRJSON//$'\r'/''}"
          echo "::set-output name=value::$CONNSTRJSON"
          
      - name: Output Connection String
        run: |
          echo "${{ steps.connectionstr.outputs.value }}"

      # Azure logout
      - name: logout
        run: |
            az logout
        if: always()
